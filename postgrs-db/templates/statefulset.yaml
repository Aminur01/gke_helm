apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-db
          image: postgres:15-alpine  # Use lightweight PostgreSQL
          command: ["/bin/sh", "-c", "chmod +x /docker-entrypoint-initdb.d/create-dbs.sh && /docker-entrypoint-initdb.d/create-dbs.sh"]
          env:
            - name: POSTGRES_DB
              value: "postgres"  # Default DB where script runs
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgrespass"
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "CWADB"
            - name: POSTGRES_USER
              value: "CWADB"
            - name: POSTGRES_PASSWORD
              value: "CWADBpass"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres-data
      volumes:
        - name: init-script
          configMap:
            name: create-dbs-configmap
            defaultMode: 0777
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi